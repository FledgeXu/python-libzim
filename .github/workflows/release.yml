name: release
on:
  release:
    types: [published]
    tags:
      - v*

env:
  LIBZIM_RELEASE: libzim_linux-x86_64-6.1.5
  LIBZIM_INCLUDE_PATH: include/zim
  CYTHON_VERSION: 0.29.6

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # TODO: expand this to cross-platform builds (see V2 approach below)
        # os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Cache libzim dylib & headers
        uses: actions/cache@master
        id: cache-libzim
        with:
          path: libzim_linux
          key: ${{ env.LIBZIM_RELEASE }}-libzim-cache

      - name: Download libzim dylib & headers from OpenZIM.org releases
        if: steps.cache-libzim.outputs.cache-hit != 'true'
        run: |
          wget -q https://download.openzim.org/release/libzim/$LIBZIM_RELEASE.tar.gz
          tar --gunzip --extract --file=$LIBZIM_RELEASE.tar.gz
          mv $LIBZIM_RELEASE libzim_linux

      - name: Link libzim dylib & headers into workspace lib and include folders
        run: |
          cp -dp $GITHUB_WORKSPACE/libzim_linux/lib/x86_64-linux-gnu/* lib/
          ln -s libzim.so.6 lib/libzim.so
          ln -s $GITHUB_WORKSPACE/libzim_linux/$LIBZIM_INCLUDE_PATH include/zim

      - name: Build cython, sdist, and bdist_wheels
        run: |
          pip install --upgrade cython==$CYTHON_VERSION setuptools pip wheel
          python3 setup.py build_ext --rpath='$ORIGIN'
          if [[  "${{ matrix.python-version }}" == "3.6" ]]
          then
            python3 setup.py sdist
          fi
          cp -p lib/libzim.so.6 libzim
          python3 setup.py bdist_wheel --plat-name=manylinux1_x86_64

      - uses: actions/upload-artifact@v1
        with:
          name: wheels
          path: ./dist

      - name: Push release to PyPI
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # TODO: remove this line to upload to the real PyPI when ready
          repository_url: https://test.pypi.org/legacy/
